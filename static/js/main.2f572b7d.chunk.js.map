{"version":3,"sources":["assets/bell_01.ogg","assets/notif.png","Components/Home.js","Components/FormControls/TextInput.js","Components/FormControls/CheckboxInput.js","Components/Calculators/SwordFight/RivalLevelingTime.js","Components/Navbar.js","Components/Calculators/ITRTG/IdlingToRuleTheGods.js","actions/index.js","Components/Timer/Timer.js","Components/Timer/TimerList.js","Components/CustomTimerAdder.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["module","exports","Home","class","Component","TextInput","value","this","props","toString","label","className","htmlFor","id","type","onChange","help","React","PureComponent","defaultProps","CheckboxInput","checked","Master","level","unspentPoints","RivalLevelingTime","state","masters","rivalMasterLevel","rivalMasterTargetLevel","rivalMasterGreaterAmbition","inspiringLeaderLevel","greaterInspiringLeader","handleMasterLevelChange","bind","handleMasterPointsChange","handleRivalMasterLevelChange","handleRivalMasterTargetLevelChange","handleRivalMasterGreaterAmbitionChange","handleInspiringLeaderLevelChange","handleGreaterInspiringLeaderChange","calculate","event","index","target","split","newLevel","parseInt","master","list","setState","newPoints","maxPointsPerInspiringLeaderLevel","cap","capped","Math","min","console","log","rivalLevel","rivalTargetLevel","greaterAmbition","effectiveLevels","map","max","alert","totalUnspentPoints","capUnspent","reduce","a","b","totalMinutes","currentLevel","totalDifference","item","expPerMin","expForLevel","minutes","timerSeconds","round","AddTimer","timers","dispatch","bell_01","key","data-tooltip","onClick","rel","href","connect","document","addEventListener","$navbarBurgers","Array","prototype","slice","call","querySelectorAll","length","forEach","el","dataset","$target","getElementById","classList","toggle","Navbar","role","aria-label","to","logo","src","width","height","alt","aria-expanded","data-target","aria-hidden","pages","i","subpages","link","title","subpage","IdlingToRuleTheGods","addTimer","timer","payload","Timer","seconds","isRunning","playSound","sendNotification","tick","start","restart","handlePlaySoundChange","handleSendNotificationChange","audio","Audio","sound","clearInterval","intervalHandle","play","notification","setInterval","prevProps","hours","floor","visible","name","TimerList","useSelector","useState","setTitle","ignore","setIgnore","options","setOptions","open","setOpen","page","setPage","timersSlice","lastPage","prevVisible","nextVisible","find","body","tag","Date","now","icon","notifIcon","lang","dir","notSupported","onPermissionGranted","onPermissionDenied","timeout","CustomTimerAdder","component","setName","setSeconds","useDispatch","e","App","exact","path","Boolean","window","location","hostname","match","allReducers","combineReducers","action","concat","filter","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f572b7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bell_01.b81c7b5a.ogg\";","module.exports = __webpack_public_path__ + \"static/media/notif.2c552084.png\";","import React, {Component} from 'react';\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        return (\r\n            <div class=\"has-text-centered slide-from-right\">\r\n                <h1 class=\"title is-1\">Home</h1>\r\n                <p>This is a tool for calculating time for certain goals in idle games and setting a timer so you can be instantly notified when you reach them. Pick a game above to get started.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react';\r\n//combines label and input into one component, used for text inputs (default) but also can be passed a prop and used for similar input types\r\nclass TextInput extends React.PureComponent{\r\n  static defaultProps = {\r\n    \"type\": \"text\"\r\n  }\r\n\r\n  render(){\r\n    const value = this.props.value.toString();\r\n    let label = <p></p>;\r\n    if(this.props.label){\r\n      label = <label className=\"label\" htmlFor={this.props.id} >{this.props.label}</label>;\r\n    }\r\n    return (<div className=\"field\">\r\n              {label}\r\n              <div className=\"control\">\r\n                <input className=\"input\" id={this.props.id} type={this.props.type} value={value} onChange={this.props.onChange} />\r\n              </div>\r\n              {this.props.help ? <p className=\"help\">{this.props.help}</p> : \"\"}\r\n            </div>);\r\n  }\r\n}\r\n\r\nexport default TextInput;","import React from 'react';\r\nclass CheckboxInput extends React.PureComponent{\r\n    render(){\r\n      let label = <p></p>;\r\n      if(this.props.label){\r\n        label = <label className=\"label\" htmlFor={this.props.id} >{this.props.label}</label>;\r\n      }\r\n      return (<div className=\"field\">\r\n                <label className=\"checkBox\" htmlFor={this.props.id} >\r\n                  <input id={this.props.id} type=\"checkbox\" checked={this.props.checked} onChange={this.props.onChange} />\r\n                  {this.props.label}\r\n                </label>\r\n              </div>);\r\n    }\r\n}\r\n\r\nexport default CheckboxInput;","import React, { Component } from \"react\";\r\nimport TextInput from \"Components/FormControls/TextInput\";\r\nimport CheckboxInput from \"Components/FormControls/CheckboxInput\";\r\nimport bell_01 from \"assets/bell_01.ogg\";\r\nimport { connect } from \"react-redux\";\r\nimport { AddTimer } from \"App\";\r\n\r\nclass Master {\r\n  constructor(level, unspentPoints) {\r\n    this.level = level;\r\n    this.unspentPoints = unspentPoints;\r\n  }\r\n}\r\n\r\nclass RivalLevelingTime extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      masters: [new Master(0, 0), new Master(0, 0), new Master(0, 0)],\r\n      rivalMasterLevel: 0,\r\n      rivalMasterTargetLevel: 0,\r\n      rivalMasterGreaterAmbition: false,\r\n      inspiringLeaderLevel: 0,\r\n      greaterInspiringLeader: false\r\n    };\r\n    this.handleMasterLevelChange = this.handleMasterLevelChange.bind(this);\r\n    this.handleMasterPointsChange = this.handleMasterPointsChange.bind(this);\r\n\r\n    this.handleRivalMasterLevelChange = this.handleRivalMasterLevelChange.bind(\r\n      this\r\n    );\r\n    this.handleRivalMasterTargetLevelChange = this.handleRivalMasterTargetLevelChange.bind(\r\n      this\r\n    );\r\n    this.handleRivalMasterGreaterAmbitionChange = this.handleRivalMasterGreaterAmbitionChange.bind(\r\n      this\r\n    );\r\n\r\n    this.handleInspiringLeaderLevelChange = this.handleInspiringLeaderLevelChange.bind(\r\n      this\r\n    );\r\n    this.handleGreaterInspiringLeaderChange = this.handleGreaterInspiringLeaderChange.bind(\r\n      this\r\n    );\r\n\r\n    this.calculate = this.calculate.bind(this);\r\n  }\r\n\r\n  handleMasterLevelChange(event) {\r\n    let index = event.target.id.split(\"_\")[2];\r\n    let newLevel = parseInt(event.target.value, 10) || 0;\r\n    let master = { ...this.state.masters[index] };\r\n    let list = [...this.state.masters];\r\n    master.level = newLevel;\r\n    list[index] = master;\r\n    this.setState({\r\n      masters: list\r\n    });\r\n  }\r\n\r\n  handleMasterPointsChange(event) {\r\n    let index = event.target.id.split(\"_\")[2];\r\n    let newPoints = parseInt(event.target.value) || 0;\r\n    let master = { ...this.state.masters[index] };\r\n    let list = [...this.state.masters];\r\n    master.unspentPoints = newPoints;\r\n    list[index] = master;\r\n    this.setState({\r\n      masters: list\r\n    });\r\n  }\r\n\r\n  handleRivalMasterLevelChange(event) {\r\n    let rivalMasterLevel = parseInt(event.target.value) || 0;\r\n    this.setState({\r\n      rivalMasterLevel\r\n    });\r\n  }\r\n\r\n  handleRivalMasterTargetLevelChange(event) {\r\n    let rivalMasterTargetLevel = parseInt(event.target.value) || 0;\r\n    this.setState({\r\n      rivalMasterTargetLevel\r\n    });\r\n  }\r\n\r\n  handleRivalMasterGreaterAmbitionChange(event) {\r\n    let rivalMasterGreaterAmbition = event.target.checked;\r\n    this.setState({\r\n      rivalMasterGreaterAmbition\r\n    });\r\n  }\r\n\r\n  handleInspiringLeaderLevelChange(event) {\r\n    let inspiringLeaderLevel = parseInt(event.target.value) || 0;\r\n    this.setState({\r\n      inspiringLeaderLevel\r\n    });\r\n  }\r\n  handleGreaterInspiringLeaderChange(event) {\r\n    let greaterInspiringLeader = event.target.checked;\r\n    this.setState({\r\n      greaterInspiringLeader\r\n    });\r\n  }\r\n\r\n  capUnspent(unspentPoints) {\r\n    let maxPointsPerInspiringLeaderLevel = this.state.greaterInspiringLeader\r\n      ? 30\r\n      : 20;\r\n    let cap =\r\n      this.state.inspiringLeaderLevel * maxPointsPerInspiringLeaderLevel;\r\n    let capped = Math.min(unspentPoints, cap);\r\n    if (capped < unspentPoints)\r\n      console.log(\"Capped \" + unspentPoints + \" unspent points at \" + capped);\r\n    return capped;\r\n  }\r\n  calculate() {\r\n    let rivalLevel = this.state.rivalMasterLevel;\r\n    let rivalTargetLevel = this.state.rivalMasterTargetLevel;\r\n    let greaterAmbition = this.state.rivalMasterGreaterAmbition;\r\n\r\n    //adjust master levels to account for greater ambition and create an array of the values\r\n    const greaterAmbitionBonus = 100;\r\n    let effectiveLevels = this.state.masters.map(master =>\r\n      greaterAmbition ? master.level + greaterAmbitionBonus : master.level\r\n    );\r\n\r\n    //if master levels are too low to reach the target, return an error message\r\n    if (rivalTargetLevel > Math.max(...effectiveLevels)) {\r\n      alert(\"Rival will never reach target level!\");\r\n      return;\r\n    }\r\n    let totalUnspentPoints = this.state.masters\r\n      .map(master => this.capUnspent(master.unspentPoints))\r\n      .reduce((a, b) => a + b);\r\n    console.log(\"Total unspent points: \" + totalUnspentPoints);\r\n\r\n    let totalMinutes = 0.0;\r\n    for (\r\n      let currentLevel = rivalLevel;\r\n      currentLevel < rivalTargetLevel;\r\n      currentLevel++\r\n    ) {\r\n      console.log(\r\n        \"Rival leveling from \" +\r\n          currentLevel +\r\n          \" to \" +\r\n          (currentLevel + 1) +\r\n          \":\"\r\n      );\r\n      //create a new array of differences between rival level and master effective level, then add them together\r\n      let totalDifference = effectiveLevels\r\n        .map(item => Math.max(item - currentLevel))\r\n        .reduce((a, b) => a + b);\r\n      console.log(\"Total level difference: \" + totalDifference);\r\n      console.log(\"Base exp/min: \" + totalDifference);\r\n      let inspiringLeaderMultiplier = (totalUnspentPoints + 100) / 100;\r\n      let expPerMin = totalDifference * inspiringLeaderMultiplier;\r\n      console.log(\"Inspired exp/min: \" + expPerMin);\r\n      let expForLevel = (currentLevel + 1) * 10 - 1;\r\n      let minutes = expForLevel / expPerMin;\r\n      totalMinutes += minutes;\r\n      console.log(\r\n        \"It will take \" +\r\n          minutes +\r\n          \" minutes to gain the \" +\r\n          expForLevel +\r\n          \" exp for this level.\"\r\n      );\r\n    }\r\n\r\n    console.log(\"The total time is \" + totalMinutes);\r\n    const timerName = \"Rival Leveling\";\r\n    let timerSeconds = Math.round(totalMinutes * 60);\r\n\r\n    AddTimer(\r\n      this.props.timers,\r\n      this.props.dispatch,\r\n      timerName,\r\n      timerSeconds,\r\n      bell_01\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"sword-fight-calculator\" className=\"slide-from-right\">\r\n        <h1 className=\"title is-1 has-text-centered\">\r\n          Sword Fight - Rival Leveling Time\r\n        </h1>\r\n        <div className=\"tile is-ancestor\">\r\n          {this.state.masters.map((item, index) => (\r\n            <div key={index} className=\"tile is-parent\">\r\n              <div className=\"tile is-child box\">\r\n                <h2 className=\"title is-3 has-text-centered\">\r\n                  Master {index + 1}\r\n                </h2>\r\n                <TextInput\r\n                  type=\"number\"\r\n                  id={\"master_level_\" + index}\r\n                  label=\"Level: \"\r\n                  value={item.level}\r\n                  onChange={this.handleMasterLevelChange}\r\n                />\r\n                <TextInput\r\n                  type=\"number\"\r\n                  id={\"master_points_\" + index}\r\n                  label=\"Unspent Points: \"\r\n                  value={item.unspentPoints}\r\n                  onChange={this.handleMasterPointsChange}\r\n                  help=\"Ignore if not using Inspiring Leader\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"tile is-ancestor\">\r\n          <div className=\"tile is-parent\">\r\n            <div className=\"tile is-child box\">\r\n              <h2 className=\"title is-3 has-text-centered\">Rival Master</h2>\r\n              <TextInput\r\n                type=\"number\"\r\n                id=\"rival_master_level\"\r\n                label=\"Level: \"\r\n                value={this.state.rivalMasterLevel}\r\n                onChange={this.handleRivalMasterLevelChange}\r\n              />\r\n              <TextInput\r\n                type=\"number\"\r\n                id=\"rival_master_target_level\"\r\n                label=\"Target Level: \"\r\n                value={this.state.rivalMasterTargetLevel}\r\n                onChange={this.handleRivalMasterTargetLevelChange}\r\n              />\r\n              <CheckboxInput\r\n                id=\"rival_master_greater_ambition\"\r\n                type=\"checkbox\"\r\n                label={\r\n                  <>\r\n                    Co-Founder with{\" \"}\r\n                    <span\r\n                      class=\"tooltip\"\r\n                      data-tooltip=\"Unlocks upon completing 10 Co-Founder special trainings.\"\r\n                    >\r\n                      Greater Ambition\r\n                    </span>\r\n                  </>\r\n                }\r\n                checked={this.state.rivalMasterGreaterAmbition}\r\n                onChange={this.handleRivalMasterGreaterAmbitionChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"tile is-parent\">\r\n            <div className=\"tile is-child box\">\r\n              <h2 className=\"title is-3 has-text-centered\">Inspiring Leader</h2>\r\n              <h6 className=\"subtitle is-6 has-text-centered\">\r\n                (Xander's 4th Skill)\r\n              </h6>\r\n              <TextInput\r\n                type=\"number\"\r\n                id=\"inspiring_leader_level\"\r\n                label=\"Level: \"\r\n                value={this.state.inspiringLeaderLevel}\r\n                onChange={this.handleInspiringLeaderLevelChange}\r\n              />\r\n              <CheckboxInput\r\n                id=\"inspiring_leader_greater\"\r\n                label={\r\n                  <>\r\n                    <span\r\n                      class=\"tooltip has-tooltip-right-mobile\"\r\n                      data-tooltip=\"Unlocks upon completing all 15 Co-Founder special trainings.\"\r\n                    >\r\n                      Greater Inspiring Leader\r\n                    </span>{\" \"}\r\n                    unlocked\r\n                  </>\r\n                }\r\n                checked={this.state.greaterInspiringLeader}\r\n                onChange={this.handleGreaterInspiringLeaderChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"has-text-centered\">\r\n          <input\r\n            type=\"button\"\r\n            className=\"button is-primary\"\r\n            onClick={this.calculate}\r\n            value=\"Calculate\"\r\n          ></input>\r\n          <br />\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://www.kongregate.com/games/tovrick/sword-fight\"\r\n          >\r\n            Play Sword Fight on Kongregate\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function(state) {\r\n  return {\r\n    timers: state.timers\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RivalLevelingTime);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n/* navbar mobile menu toggle (unmodified example implementation from https://bulma.io/documentation/components/navbar/) */\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  // Get all \"navbar-burger\" elements\r\n  const $navbarBurgers = Array.prototype.slice.call(\r\n    document.querySelectorAll(\".navbar-burger\"),\r\n    0\r\n  );\r\n\r\n  // Check if there are any navbar burgers\r\n  if ($navbarBurgers.length > 0) {\r\n    // Add a click event on each of them\r\n    $navbarBurgers.forEach(el => {\r\n      el.addEventListener(\"click\", () => {\r\n        // Get the target from the \"data-target\" attribute\r\n        const target = el.dataset.target;\r\n        const $target = document.getElementById(target);\r\n\r\n        // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\r\n        el.classList.toggle(\"is-active\");\r\n        $target.classList.toggle(\"is-active\");\r\n      });\r\n    });\r\n  }\r\n});\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav\r\n        className=\"navbar is-primary\"\r\n        role=\"navigation\"\r\n        aria-label=\"main navigation\"\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"navbar-brand\">\r\n            <NavLink className=\"navbar-item\" to=\"/\">\r\n              {this.props.logo ? (\r\n                <img\r\n                  src={this.props.logo}\r\n                  width=\"112\"\r\n                  height=\"28\"\r\n                  alt=\"logo\"\r\n                ></img>\r\n              ) : (\r\n                \"Home\"\r\n              )}\r\n            </NavLink>\r\n\r\n            <button\r\n              //role=\"button\"\r\n              className=\"navbar-burger burger\"\r\n              aria-label=\"menu\"\r\n              aria-expanded=\"false\"\r\n              data-target=\"navbarBasicExample\"\r\n            >\r\n              <span aria-hidden=\"true\"></span>\r\n              <span aria-hidden=\"true\"></span>\r\n              <span aria-hidden=\"true\"></span>\r\n            </button>\r\n          </div>\r\n\r\n          <div id=\"navbarBasicExample\" className=\"navbar-menu\">\r\n            <div className=\"navbar-start\">\r\n              {this.props.pages.map((item, i) => {\r\n                return (\r\n                  /* empty root element to contain this without changing the html and misaligning the menu */\r\n                  <Fragment key={i}>\r\n                    {item.subpages ? (\r\n                      /*item has subpages - make dropdown*/\r\n                      <div className=\"navbar-item has-dropdown is-hoverable\">\r\n                        <NavLink className=\"navbar-link\" to={item.link}>\r\n                          {item.title}\r\n                        </NavLink>\r\n                        <div className=\"navbar-dropdown\">\r\n                          {item.subpages.map((subpage, i) => {\r\n                            return (\r\n                              <NavLink\r\n                                key={i}\r\n                                className=\"navbar-item\"\r\n                                to={subpage.link}\r\n                              >\r\n                                {subpage.title}\r\n                              </NavLink>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      /* item doesn't have subpages - just show the link */\r\n                      <NavLink className=\"navbar-item\" to={item.link}>\r\n                        {item.title}\r\n                      </NavLink>\r\n                    )}\r\n                  </Fragment>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <div className=\"navbar-end\">\r\n              <div className=\"navbar-item\">:)</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass IdlingToRuleTheGods extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"itrtg-calculator\" className=\"slide-from-right\">\r\n        <div className=\"has-text-centered\">\r\n          <h1 className=\"title is-1 has-text-centered\">\r\n            Idling to Rule the Gods\r\n          </h1>\r\n          <h2 className=\"title is-2 has-text-centered\">Coming Soon</h2>\r\n\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://www.kongregate.com/games/Ryu82/idling-to-become-god\"\r\n          >\r\n            Play ITRTG on Kongregate\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IdlingToRuleTheGods;\r\n","export const addTimer = timer => {\r\n  return {\r\n    type: \"ADD_TIMER\",\r\n    payload: timer\r\n  };\r\n};\r\n\r\nexport const removeTimer = timer => {\r\n  return {\r\n    type: \"REMOVE_TIMER\",\r\n    payload: timer\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport CheckboxInput from \"Components/FormControls/CheckboxInput\";\r\nimport \"./Timer.scss\";\r\nimport bell_01 from \"assets/bell_01.ogg\";\r\nimport { removeTimer } from \"actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Timer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      seconds: this.props.seconds,\r\n      isRunning: this.props.isRunning || false,\r\n      playSound: true,\r\n      sendNotification: false\r\n    };\r\n    this.tick = this.tick.bind(this);\r\n    this.start = this.start.bind(this);\r\n    this.restart = this.restart.bind(this);\r\n\r\n    this.handlePlaySoundChange = this.handlePlaySoundChange.bind(this);\r\n    this.handleSendNotificationChange = this.handleSendNotificationChange.bind(\r\n      this\r\n    );\r\n\r\n    this.audio = new Audio(this.props.sound);\r\n  }\r\n\r\n  handlePlaySoundChange(event) {\r\n    let playSound = event.target.checked;\r\n    this.setState({\r\n      playSound\r\n    });\r\n  }\r\n\r\n  handleSendNotificationChange(event) {\r\n    let sendNotification = event.target.checked;\r\n    this.setState({\r\n      sendNotification\r\n    });\r\n  }\r\n\r\n  tick() {\r\n    let seconds = this.state.seconds - 1;\r\n\r\n    if (seconds <= 0) {\r\n      seconds = 0.0;\r\n      clearInterval(this.intervalHandle);\r\n      if (this.state.playSound) this.audio.play();\r\n      if (this.state.sendNotification) this.props.notification();\r\n    }\r\n    this.setState({\r\n      seconds\r\n    });\r\n  }\r\n  start() {\r\n    this.intervalHandle = setInterval(this.tick, 1000);\r\n    this.setState({\r\n      isRunning: true\r\n    });\r\n  }\r\n\r\n  restart() {\r\n    clearInterval(this.intervalHandle);\r\n    this.setState({\r\n      seconds: this.props.seconds,\r\n      isRunning: false\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Typical usage (don't forget to compare props):\r\n    console.log(\"Timer update\");\r\n    if (this.props.seconds !== prevProps.seconds) {\r\n      this.setState({\r\n        seconds: this.props.seconds,\r\n        isRunning: false\r\n      });\r\n      if (this.intervalHandle) {\r\n        clearInterval(this.intervalHandle);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let hours = Math.floor(this.state.seconds / 3600);\r\n    let minutes = Math.floor(this.state.seconds / 60) - hours * 60;\r\n    let seconds = this.state.seconds - minutes * 60 - hours * 3600;\r\n    return (\r\n      <div className={this.props.visible ? \"timer\" : \"timer hidden\"}>\r\n        <h2 className=\"subtitle is-3\">\r\n          {this.props.name}\r\n          <span\r\n            className=\"icon has-text-danger\"\r\n            onClick={() => this.props.dispatch(removeTimer(this.props.name))}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n        </h2>\r\n\r\n        <div className=\"is-size-4\">\r\n          {hours}:{minutes < 10 ? \"0\" + minutes : minutes}:\r\n          {seconds < 10 ? \"0\" + seconds : seconds}\r\n        </div>\r\n        <input\r\n          type=\"button\"\r\n          className=\"button is-primary is-outlined\"\r\n          onClick={this.state.isRunning ? this.restart : this.start}\r\n          value={this.state.isRunning ? \"Reset\" : \"Start\"}\r\n        ></input>\r\n        <div className=\"columns\">\r\n          <div className=\"column\">\r\n            <CheckboxInput\r\n              label=\"Sound\"\r\n              checked={this.state.playSound}\r\n              onChange={this.handlePlaySoundChange}\r\n            />\r\n          </div>\r\n          <div className=\"column\">\r\n            <CheckboxInput\r\n              label=\"Notification\"\r\n              checked={this.state.sendNotification}\r\n              onChange={this.handleSendNotificationChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Timer);\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Timer from \"./Timer\";\r\nimport notifIcon from \"assets/notif.png\";\r\nimport Notification from \"react-web-notification\";\r\nimport \"./TimerList.scss\";\r\n\r\nfunction TimerList() {\r\n  const timers = useSelector(state => state.timers);\r\n\r\n  //notification title\r\n  const [title, setTitle] = useState(\"\");\r\n  const [ignore, setIgnore] = useState(false);\r\n  const [options, setOptions] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [page, setPage] = useState(0);\r\n  const itemsPerPage = 3;\r\n\r\n  let timersSlice = [];\r\n\r\n  if (timers.length > 0) {\r\n    timersSlice = timers.slice(\r\n      page * itemsPerPage,\r\n      page * itemsPerPage + itemsPerPage\r\n    );\r\n  }\r\n\r\n  let lastPage = Math.max(0, Math.floor((timers.length - 1) / itemsPerPage));\r\n  let prevVisible = page > 0;\r\n  let nextVisible = page < lastPage;\r\n\r\n  const sendNotification = name => {\r\n    if (ignore) {\r\n      return;\r\n    }\r\n\r\n    const now = Date.now();\r\n\r\n    const title = \"Idle Timer\";\r\n    const body = name + \" Complete!\";\r\n    const tag = now;\r\n    const icon = notifIcon;\r\n\r\n    // Available options\r\n    // See https://developer.mozilla.org/en-US/docs/Web/API/Notification/Notification\r\n    const options = {\r\n      tag: tag,\r\n      body: body,\r\n      icon: icon,\r\n      lang: \"en\",\r\n      dir: \"ltr\"\r\n    };\r\n\r\n    //options must be set first, as notification appears when title is set\r\n    setOptions(options);\r\n    setTitle(title);\r\n  };\r\n\r\n  return (\r\n    <div className=\"timerList\">\r\n      <h1 onClick={() => setOpen(!open)}>Timers ({timers.length})</h1>\r\n\r\n      <div className={open ? \"timerListBox open\" : \"timerListBox closed\"}>\r\n        {timersSlice.length > 0 ? (\r\n          <div className=\"timer-list-pagination\">\r\n            <span className=\"timer-list-pagination-arrow\">\r\n              {prevVisible ? (\r\n                <button onClick={() => setPage(Math.max(0, page - 1))}>\r\n                  &lt;\r\n                </button>\r\n              ) : null}\r\n            </span>\r\n            <span className=\"timer-list-pagination-current\">\r\n              {page + 1}/{lastPage + 1}\r\n            </span>\r\n            <span className=\"timer-list-pagination-arrow\">\r\n              {nextVisible ? (\r\n                <button\r\n                  visible={nextVisible}\r\n                  onClick={() => setPage(Math.min(page + 1, lastPage))}\r\n                >\r\n                  &gt;\r\n                </button>\r\n              ) : null}\r\n            </span>\r\n          </div>\r\n        ) : null}\r\n\r\n        {timers.length > 0 ? (\r\n          timers.map((timer, i) => {\r\n            return (\r\n              <Timer\r\n                visible={\r\n                  timersSlice.find(item => item.name === timer.name)\r\n                    ? true\r\n                    : false\r\n                }\r\n                key={i}\r\n                name={timer.name}\r\n                seconds={timer.seconds}\r\n                sound={timer.sound}\r\n                notification={() => sendNotification(timer.name)}\r\n              ></Timer>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>There are no timers yet.</div>\r\n        )}\r\n      </div>\r\n\r\n      <Notification\r\n        ignore={ignore && title !== \"\"}\r\n        notSupported={() => setIgnore(true)}\r\n        onPermissionGranted={() => setIgnore(false)}\r\n        onPermissionDenied={() => setIgnore(true)}\r\n        timeout={5000}\r\n        title={title}\r\n        options={options}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerList;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TextInput from \"Components/FormControls/TextInput\";\r\nimport bell_01 from \"assets/bell_01.ogg\";\r\nimport { AddTimer } from \"../App\";\r\n\r\nfunction CustomTimerAdder() {\r\n  const timers = useSelector(state => state.timers);\r\n  const [name, setName] = useState(\"\");\r\n  const [seconds, setSeconds] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  const addButton = () => {\r\n    console.log(\"TEST\");\r\n    let timerName = name;\r\n    let timerSeconds = seconds;\r\n\r\n    AddTimer(timers, dispatch, timerName, timerSeconds, bell_01);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"title is-1 has-text-centered\">Custom Timer</h1>\r\n      <p>\r\n        Here you can add timers for anything you want, as long as you already\r\n        know how much time it will take.\r\n      </p>\r\n      <TextInput\r\n        label=\"Name: \"\r\n        value={name}\r\n        onChange={e => setName(e.target.value)}\r\n      ></TextInput>\r\n      <TextInput\r\n        label=\"Seconds: \"\r\n        value={seconds}\r\n        onChange={e => setSeconds(parseInt(e.target.value) || 0)}\r\n      ></TextInput>\r\n      <div className=\"has-text-centered\">\r\n        <input\r\n          type=\"button\"\r\n          className=\"button is-primary\"\r\n          onClick={addButton}\r\n          value=\"Add\"\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomTimerAdder;\r\n","import React, { Fragment } from \"react\";\n//import logo from './logo.svg';\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport RivalLevelingTime from \"./Components/Calculators/SwordFight/RivalLevelingTime\";\nimport Navbar from \"./Components/Navbar\";\nimport \"./App.scss\";\nimport IdlingToRuleTheGods from \"./Components/Calculators/ITRTG/IdlingToRuleTheGods\";\nimport TimerList from \"./Components/Timer/TimerList\";\nimport CustomTimerAdder from \"./Components/CustomTimerAdder\";\nimport { addTimer } from \"./actions\";\n\n/* this array is used to create the Navbar and Routes */\nlet pages = [\n  {\n    title: \"Sword Fight\",\n    //these top level links will just go to the first calculator because I don't know what to put on a landing page for each game...\n    link: \"/sword-fight/rival-leveling\",\n    component: RivalLevelingTime,\n    subpages: [\n      {\n        title: \"Rival Leveling Time\",\n        link: \"/sword-fight/rival-leveling\",\n        component: RivalLevelingTime\n      }\n    ]\n  },\n  { title: \"ITRTG\", link: \"/itrtg\", component: IdlingToRuleTheGods },\n  { title: \"Custom Timer\", link: \"/custom\", component: CustomTimerAdder }\n];\n\nexport function AddTimer(timers, dispatch, name, seconds, sound) {\n  if (timers.find(item => item.name === name)) {\n    //TODO ask to overwrite timer... or just do it without asking\n    alert(\"This timer already exists!\");\n  } else {\n    dispatch(\n      addTimer({\n        name,\n        seconds,\n        sound\n      })\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar pages={pages} />\n        <section className=\"section main-section\">\n          <div className=\"container\">\n            <Route exact path=\"/\" component={Home} />\n            {pages.map((page, i) => {\n              return (\n                <Fragment key={i}>\n                  <Route exact path={page.link} component={page.component} />\n                  {page.subpages\n                    ? page.subpages.map((subpage, i) => {\n                        if (subpage.link !== page.link) {\n                          return (\n                            <Route\n                              key={i}\n                              exact\n                              path={subpage.link}\n                              component={subpage.component}\n                            />\n                          );\n                        } else return null;\n                      })\n                    : \"\"}\n                </Fragment>\n              );\n            })}\n          </div>\n        </section>\n        <div className=\"timers\">\n          <TimerList></TimerList>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\r\nconst timers = (state = [], action) => {\r\n  console.log(\"TIMER REDUCER\");\r\n  switch (action.type) {\r\n    case \"ADD_TIMER\":\r\n      return state.concat(action.payload);\r\n    case \"REMOVE_TIMER\":\r\n      //payload is the timer name\r\n      return state.filter(item => item.name !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst allReducers = combineReducers({\r\n  timers\r\n});\r\n\r\nexport default allReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport allReducers from \"./reducers\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}